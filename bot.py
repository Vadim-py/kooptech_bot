import telebot
from telebot import types
import sqlite3
from src import ui
import requests
from bs4 import BeautifulSoup
from colorama import Fore


TOKEN_TXT_FILE = open('API_KEY.txt', 'r')
TOKEN = TOKEN_TXT_FILE.read()

bot = telebot.TeleBot(TOKEN)

ui.Menu()

keyboard = types.InlineKeyboardMarkup()
key_stud = types.InlineKeyboardButton(text='–°—Ç—É–¥–µ–Ω—Ç üë®‚Äçüéì', callback_data='student')
key_prev = types.InlineKeyboardButton(text='–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å üë®‚Äçüè´', callback_data='prev')
keyboard.add(key_stud)
keyboard.add(key_prev)


try:
  conn = sqlite3.connect('users.db', check_same_thread=False)
  cursor = conn.cursor()

  def db(user_Id: int, username: str):
    cursor.execute('INSERT INTO users (user_Id, username) VALUES (?, ?)', (user_Id, username))
    conn.commit()
except Exception as e:
  print(Fore.RED + f'–æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {e}')

try:
  url = 'https://koopteh.onego.ru/student/lessons/'
  res = requests.get(url)
  bs = BeautifulSoup(res.text, 'lxml')
  line = bs.find("table", class_ = 'styled').find('tbody').find_all('a')
  for row in line:
      # col = row.find_all('a').get('href')
      row.get('href')

  url2 = row.get("href") + 'export?format=csv'
  respon2e = urllib.request.urlopen(url2)
  with io.TextIOWrapper(respon2e, encoding='utf-8') as f:
      reader = csv.reader(f)
      for ro in reader:
          print(ro)
except Exception as e:
  print(Fore.RED + f'–æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞: {e}')

@bot.message_handler(commands=['start'])
def msg(message):
  bot.send_message(message.from_user.id,
                   f'üëã –ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏–∫—É–º–∞')
  bot.send_message(message.from_user.id, text='–ö—Ç–æ –≤—ã?', reply_markup=keyboard)

  user_id = message.from_user.id
  username = message.from_user.username
  db(user_Id=user_id, username=username)


@bot.callback_query_handler(func=lambda call: True)
def callback_stud(call):
  if call.data == 'student':
    msg = '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?'
    key_stud_rasp = types.InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÖ', callback_data='rasp')
    key_stud_zvon = types.InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ üîî', callback_data='zvon')
    keyboard_stud = types.InlineKeyboardMarkup()
    keyboard_stud.add(key_stud_rasp)
    keyboard_stud.add(key_stud_zvon)
    bot.send_message(call.message.chat.id, msg, reply_markup=keyboard_stud)

  elif call.data == 'zvon':
    rasp_zvon = open('rasp.jpg', 'rb')
    key_prev_back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ üîô', callback_data='back')
    keyboard_back = types.InlineKeyboardMarkup()
    keyboard_back.add(key_prev_back)
    bot.send_photo(call.message.chat.id, rasp_zvon, reply_markup=keyboard_back)

  elif call.data == 'prev' or call.data == 'back':
    msg = '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?'
    key_prev_rasp = types.InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÖ', callback_data='rasp')
    key_prev_zvon = types.InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ üîî', callback_data='zvon')
    keyboard_prev = types.InlineKeyboardMarkup()
    keyboard_prev.add(key_prev_rasp)
    keyboard_prev.add(key_prev_zvon)
    bot.send_message(call.message.chat.id, msg, reply_markup=keyboard_prev)

  elif call.data == 'rasp':
    try:
      bot.send_message(call.message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {row.get("href")}')
    except Exception as e:
      print(Fore.RED + f'–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ {e}')

bot.polling(none_stop=True, interval=0)